import{r as f,C as A,f as y,T as a,p as l,m as h,g as x,V as d,j as b}from"./index-CSeZg0-b.js";function E(n,e){if(typeof n!="string")throw Error("You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.");if(!d.includes(n))throw Error(`Only elements types ${d.join(", ")} are allowed. Helmet does not support rendering <${n}> elements. Refer to our API for more information.`);if(!(!e||typeof e=="string"||Array.isArray(e)))throw Error(`Helmet expects a string as a child of <${n}>. Did you forget to wrap your children in braces? ( <${n}>{\`\`}</${n}> ) Refer to our API for more information.`)}function u(n){const e=x[n];return e&&console.warn(`"${n}" is not a valid JSX prop, replace it by "${e}"`),e??n}function m(n){const e=y(n);for(const r of Object.values(n))if(Array.isArray(r)){for(const t of r)if(t)for(const o of Object.keys(t)){const s=u(o);s!==o&&(t[s]=t[o],delete t[o])}}else if(r&&typeof r=="object"){const t=r;for(const o of Object.keys(t)){const s=u(o);s!==o&&(t[s]=t[o],delete t[o])}}return f.Children.forEach(n.children,r=>{if(r==null)return;if(typeof r!="object"||!("props"in r))throw Error(`"${typeof r}" is not a valid <Helmet> descendant`);let t;const o={};if(r.props)for(const[i,p]of Object.entries(r.props))i==="children"?t=p:o[u(i)]=p;let{type:s}=r;typeof s=="symbol"&&(s=s.toString()),E(s,t);function c(i){typeof i!="string"&&console.error(`child of ${s} element should be a string`)}switch(s){case a.BASE:e.base=o;break;case a.BODY:e.bodyAttributes=o;break;case a.FRAGMENT:h(e,m({children:t}));break;case a.HTML:e.htmlAttributes=o;break;case a.LINK:case a.META:if(t)throw Error(`<${s} /> elements are self-closing and can not contain children. Refer to our API for more information.`);l(e,s,o);break;case a.NOSCRIPT:case a.SCRIPT:t!==void 0&&(c(t),o.innerHTML=t),l(e,s,o);break;case a.STYLE:c(t),o.cssText=t,l(e,s,o);break;case a.TITLE:e.titleAttributes=o,typeof t=="string"?e.title=t:Array.isArray(t)&&(e.title=t.join(""));break;case a.HEAD:}}),delete e.children,e}const $=n=>{const e=f.use(A);if(!e)throw Error("<Helmet> component must be within a <HelmetProvider> children tree");const r=f.useId();return e.update(r,m(n)),f.useEffect(()=>{e.update(r,m(n)),e.clientApply()}),f.useEffect(()=>()=>{e.update(r,void 0)},[e,r]),null},w=({children:n,hasBorderBottom:e=!0,as:r="div"})=>b.jsx(r,{className:`max-w-screen-lg mx-auto px-4 md:px-8 py-12 md:py-15 xl:px-0 ${e&&"border-b-2 border-gray-dark/80"}`,children:n}),P=({title:n,as:e="h1",fontBold:r="bold",textAlign:t="start",fontSize:o="2xl",responsiveClasses:s="",spacing:c="mb-6",color:i="white"})=>b.jsx(e,{className:`${c} text-${o} text-${t} text-${i} font-${r} ${s}`,children:n});export{w as C,$ as H,P as a};
